{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentIndex","setCurrentIndex","imgStyle","width","height","animationStyles","transition","disabledNextButton","length","disabledPrevButton","displayedImages","slice","className","style","map","img","index","src","alt","type","onClick","newIndex","Math","abs","max","disabled","min","App","state","handleInputChange","event","setState","prevState","target","name","value","Number","this","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+QA8FeA,EAlFmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,CACfC,MAAOP,EACPQ,OAAQR,GAGJS,EAAkB,CACtBC,WAAW,aAAD,OAAeT,EAAf,mBAGNU,GACHT,GAAYE,EAAeL,GAAaF,EAAOe,OAE5CC,GAAsBX,GAA6B,IAAjBE,EA8BlCU,EAAkBjB,EAAOkB,MAAMX,EAAcA,EAAeL,GAElE,OACE,sBAAKiB,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAiBC,MAAOR,EAAtC,SACGK,EAAgBI,KAAI,SAACC,EAAaC,GAAd,OACnB,6BACE,qBAAKC,IAAG,UAAKF,GAAOG,IAAG,aAAQF,GAASH,MAAOX,KADxCa,QAKb,sBAAKH,UAAU,oBAAf,UACE,wBACEO,KAAK,SACLC,QA5BgB,WACtB,IAAIC,EAAWrB,EAAeN,EAE1BI,EACEuB,EAAW,IACbA,EAAW5B,EAAOe,OAASc,KAAKC,IAAIF,IAGtCA,EAAWC,KAAKE,IAAIH,EAAU,GAGhCpB,EAAgBoB,IAkBVI,SAAUhB,EAHZ,eAOA,wBACEU,KAAK,SACLC,QAjDgB,WACtB,IAAIC,EAAWrB,EAAeN,EAE1BI,EACEuB,GAAY5B,EAAOe,SACrBa,EAAW,GAGbA,EAAWC,KAAKI,IAAIL,EAAU5B,EAAOe,OAASb,GAGhDM,EAAgBoB,IAuCVI,SAAUlB,EAHZ,sBCrEFoB,E,4MACJC,MAAQ,CACNnC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFG,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,IACnBC,UAAU,G,EAGZ+B,kBAAoB,SAACC,GACnB,EAAKC,UAAS,SAACC,GACb,MAAwBF,EAAMG,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAO,2BACFH,GADL,kBAEGE,EAAOE,OAAOD,S,4CAKrB,WACE,IAAQ1C,EAAW4C,KAAKT,MAAhBnC,OAER,OACE,sBAAKmB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCnB,EAAOe,OAA1C,aAEA,gDAEE,uBACE0B,KAAK,YACLf,KAAK,SACLgB,MAAOE,KAAKT,MAAMhC,UAClB0C,SAAUD,KAAKR,uBAInB,gDAEE,uBACEK,KAAK,YACLf,KAAK,SACLgB,MAAOE,KAAKT,MAAMjC,UAClB2C,SAAUD,KAAKR,uBAInB,0CAEE,uBACEK,KAAK,OACLf,KAAK,SACLgB,MAAOE,KAAKT,MAAMlC,KAClB4C,SAAUD,KAAKR,uBAInB,6DAEE,uBACEK,KAAK,oBACLf,KAAK,SACLgB,MAAOE,KAAKT,MAAM/B,kBAClByC,SAAUD,KAAKR,uBAInB,cAAC,EAAD,CACEpC,OAAQ4C,KAAKT,MAAMnC,OACnBC,KAAM2C,KAAKT,MAAMlC,KACjBC,UAAW0C,KAAKT,MAAMjC,UACtBC,UAAWyC,KAAKT,MAAMhC,UACtBC,kBAAmBwC,KAAKT,MAAM/B,kBAC9BC,SAAUuC,KAAKT,MAAM9B,kB,GAtFbyC,IAAMC,WA6FTb,ICvGfc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a1e6abfe.chunk.js","sourcesContent":["import './Carousel.scss';\nimport { useState } from 'react';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const imgStyle = {\n    width: itemWidth,\n    height: itemWidth,\n  };\n\n  const animationStyles = {\n    transition: `transform ${animationDuration}ms ease-in-out`,\n  };\n\n  const disabledNextButton\n  = !infinite && currentIndex + frameSize >= images.length;\n\n  const disabledPrevButton = !infinite && currentIndex === 0;\n\n  const handleNextClick = () => {\n    let newIndex = currentIndex + step;\n\n    if (infinite) {\n      if (newIndex >= images.length) {\n        newIndex = 0;\n      }\n    } else {\n      newIndex = Math.min(newIndex, images.length - frameSize);\n    }\n\n    setCurrentIndex(newIndex);\n  };\n\n  const handlePrevClick = () => {\n    let newIndex = currentIndex - step;\n\n    if (infinite) {\n      if (newIndex < 0) {\n        newIndex = images.length - Math.abs(newIndex);\n      }\n    } else {\n      newIndex = Math.max(newIndex, 0);\n    }\n\n    setCurrentIndex(newIndex);\n  };\n\n  const displayedImages = images.slice(currentIndex, currentIndex + frameSize);\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={animationStyles}>\n        {displayedImages.map((img: string, index: number) => (\n          <li key={img}>\n            <img src={`${img}`} alt={`img${index}`} style={imgStyle} />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={handlePrevClick}\n          disabled={disabledPrevButton}\n        >\n          &lt;\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleNextClick}\n          disabled={disabledNextButton}\n        >\n          &gt;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState) => {\n      const { name, value } = event.target;\n\n      return {\n        ...prevState,\n        [name]: Number(value),\n      };\n    });\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <label>\n          Item Width:\n          <input\n            name=\"itemWidth\"\n            type=\"number\"\n            value={this.state.itemWidth}\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <label>\n          Frame Size:\n          <input\n            name=\"frameSize\"\n            type=\"number\"\n            value={this.state.frameSize}\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <label>\n          Step:\n          <input\n            name=\"step\"\n            type=\"number\"\n            value={this.state.step}\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <label>\n          Animation Duration (ms):\n          <input\n            name=\"animationDuration\"\n            type=\"number\"\n            value={this.state.animationDuration}\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <Carousel\n          images={this.state.images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n          infinite={this.state.infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}