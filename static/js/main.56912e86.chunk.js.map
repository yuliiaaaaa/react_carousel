{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentIndex","setCurrentIndex","translateValue","setTranslateValue","imgStyle","width","height","transform","transition","widthList","disabledNextButton","length","disabledPrevButton","displayedImages","slice","className","style","map","img","index","src","alt","type","onClick","newIndex","Math","abs","max","setTimeout","disabled","min","App","state","handleInputChange","event","setState","prevState","target","name","value","Number","this","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56912e86.chunk.js","sourcesContent":["import './Carousel.scss';\nimport { useState } from 'react';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [translateValue, setTranslateValue] = useState(0);\n\n  const imgStyle = {\n    width: itemWidth,\n    height: itemWidth,\n    transform: `translate(${translateValue}%)`,\n    transition: `all ${animationDuration}ms cubic-bezier(0.25, 0.1, 0.25, 1)`,\n  };\n\n  const widthList = {\n    width: frameSize * itemWidth,\n  };\n\n  const disabledNextButton\n  = !infinite && currentIndex + frameSize >= images.length;\n\n  const disabledPrevButton = !infinite && currentIndex === 0;\n\n  const handleNextClick = () => {\n    let newIndex = currentIndex + step;\n\n    if (infinite) {\n      if (newIndex >= images.length) {\n        newIndex = 0;\n      }\n    } else {\n      newIndex = Math.min(newIndex, images.length - frameSize);\n    }\n\n    setCurrentIndex(newIndex);\n    setTranslateValue(10);\n    setTimeout(() => {\n      setTranslateValue(0);\n    }, animationDuration / 20);\n  };\n\n  const handlePrevClick = () => {\n    let newIndex = currentIndex - step;\n\n    if (infinite) {\n      if (newIndex < 0) {\n        newIndex = images.length - Math.abs(newIndex);\n      }\n    } else {\n      newIndex = Math.max(newIndex, 0);\n    }\n\n    setCurrentIndex(newIndex);\n    setTranslateValue(-10);\n    setTimeout(() => {\n      setTranslateValue(0);\n    }, animationDuration / 20);\n  };\n\n  const displayedImages = images.slice(currentIndex, currentIndex + frameSize);\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={widthList}>\n        {displayedImages.map((img: string, index: number) => (\n          <li key={img}>\n            <img src={`${img}`} alt={`img${index}`} style={imgStyle} />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          onClick={handlePrevClick}\n          disabled={disabledPrevButton}\n        >\n          &lt;\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleNextClick}\n          disabled={disabledNextButton}\n          data-cy=\"next\"\n        >\n          &gt;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState) => {\n      const { name, value } = event.target;\n\n      return {\n        ...prevState,\n        [name]: Number(value),\n      };\n    });\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <div className=\"App__inputs\">\n          <label>\n            Item Width:\n            <br />\n            <input\n              name=\"itemWidth\"\n              type=\"number\"\n              value={this.state.itemWidth}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n            <br />\n          </label>\n\n          <label>\n            Frame Size:\n            <br />\n            <input\n              name=\"frameSize\"\n              type=\"number\"\n              value={this.state.frameSize}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n            <br />\n          </label>\n\n          <label>\n            Step:\n            <br />\n            <input\n              name=\"step\"\n              type=\"number\"\n              value={this.state.step}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n            <br />\n          </label>\n\n          <label>\n            Animation Duration (ms):\n            <br />\n            <input\n              name=\"animationDuration\"\n              type=\"number\"\n              value={this.state.animationDuration}\n              onChange={this.handleInputChange}\n              className=\"input\"\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={this.state.images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n          infinite={this.state.infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}